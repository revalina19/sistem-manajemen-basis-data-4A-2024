--============ MODUL 7  ============
CREATE DATABASE rentalmobil;
use rentalmobil;
-- Tabel mobil
CREATE TABLE mobil (
    id INT PRIMARY KEY AUTO_INCREMENT,
    platno VARCHAR(15) NOT NULL,
    merk VARCHAR(50) NOT NULL,
    jenis VARCHAR(50) NOT NULL,
    harga_sewa_perhari DECIMAL(10, 2) NOT NULL
);

-- Tabel peminjaman
CREATE TABLE peminjaman (
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_mobil INT NOT NULL,
    id_pelanggan INT NOT NULL,
    tgl_pinjam DATE NOT NULL,
    tgl_rencana_kembali DATE NOT NULL,
    total_hari INT,
    total_bayar DECIMAL(10, 2),
    tgl_kembali DATE,
    denda DECIMAL(10, 2),
    FOREIGN KEY (id_mobil) REFERENCES mobil(id),
    FOREIGN KEY (id_pelanggan) REFERENCES pelanggan(id)
);

-- Tabel pelanggan
CREATE TABLE pelanggan (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nama VARCHAR(100) NOT NULL,
    alamat TEXT NOT NULL,
    nik VARCHAR(16) NOT NULL,
    notelp VARCHAR(15) NOT NULL,
    jenis_kelamin ENUM('L', 'P') NOT NULL
);

INSERT INTO mobil (platno, merk, jenis, harga_sewa_perhari) VALUES
('B1234XYZ', 'Toyota', 'SUV', 500000),
('D5678ABC', 'Honda', 'Sedan', 400000),
('A9012DEF', 'Suzuki', 'Hatchback', 300000),
('C3456GHI', 'Ford', 'SUV', 550000),
('E7890JKL', 'Mitsubishi', 'Sedan', 450000);


INSERT INTO pelanggan (nama, alamat, nik, notelp, jenis_kelamin) VALUES
('John Doe', 'Jl. Merdeka No. 123, Jakarta', '1234567890123456', '081234567890', 'L'),
('Jane Smith', 'Jl. Sudirman No. 456, Bandung', '2345678901234567', '082345678901', 'P'),
('Michael Johnson', 'Jl. Gatot Subroto No. 789, Surabaya', '3456789012345678', '083456789012', 'L'),
('Emily Davis', 'Jl. Thamrin No. 101, Yogyakarta', '4567890123456789', '084567890123', 'P'),
('David Brown', 'Jl. Kebon Jeruk No. 202, Medan', '5678901234567890', '085678901234', 'L');


INSERT INTO peminjaman (id_mobil, id_pelanggan, tgl_pinjam, tgl_rencana_kembali, total_hari, total_bayar, tgl_kembali, denda) VALUES
(1, 1, '2024-05-01', '2024-05-05', NULL, NULL, NULL, NULL),
(2, 2, '2024-05-02', '2024-05-06', NULL, NULL, NULL, NULL),
(3, 3, '2024-05-03', '2024-05-07', NULL, NULL, NULL, NULL),
(4, 4, '2024-05-04', '2024-05-08', NULL, NULL, NULL, NULL),
(5, 5, '2024-05-05', '2024-05-09', NULL, NULL, NULL, NULL);


--SOAL 1
DELIMITER //
CREATE TRIGGER check_tgl_rencana_kembali
BEFORE INSERT ON peminjaman
FOR EACH ROW
BEGIN
    IF NEW.tgl_rencana_kembali < NEW.tgl_pinjam THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Tanggal rencana kembali tidak boleh lebih awal dari tanggal pinjam';
    END IF;
END //
DELIMITER ;
INSERT INTO peminjaman(id_mobil, id_pelanggan, tgl_pinjam, tgl_rencana_kembali) VALUES(1, 1, '2024-05-05', '2024-05-01');
SELECT*FROM peminjaman;

--SOAL 2
DELIMITER //
CREATE TRIGGER update_pengembalian
BEFORE UPDATE ON peminjaman
FOR EACH ROW
BEGIN
    IF NEW.tgl_kembali IS NOT NULL AND OLD.tgl_kembali IS NULL THEN
        SET NEW.total_hari = DATEDIFF(NEW.tgl_kembali, OLD.tgl_pinjam);
        SET NEW.total_bayar = NEW.total_hari * (SELECT harga_sewa_perhari FROM mobil WHERE id = OLD.id_mobil);

        IF NEW.tgl_kembali > OLD.tgl_rencana_kembali THEN
            SET NEW.denda = DATEDIFF(NEW.tgl_kembali, OLD.tgl_rencana_kembali) * 50000; -- Misalnya denda per hari adalah 50000
        ELSE
            SET NEW.denda = 0;
        END IF;
    END IF;
END //
DELIMITER ;
START TRANSACTION;
UPDATE peminjaman SET tgl_kembali = '2024-05-06' WHERE id = 2;
ROLLBACK;
SELECT*from peminjaman;

--SOAL 3
DELIMITER //
CREATE TRIGGER check_nik_length
BEFORE INSERT ON pelanggan
FOR EACH ROW
BEGIN
    IF LENGTH(NEW.nik) != 16 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Panjang NIK harus 16 karakter';
    END IF;
END //
DELIMITER ;
-- Ini harus gagal karena panjang NIK tidak 16 karakter
INSERT INTO pelanggan (nama, alamat, nik, notelp, jenis_kelamin) VALUES ('Test User', 'Test Address', '12345', '081234567890', 'L');

--SOAL 4
DELIMITER //
CREATE TRIGGER check_platno_format
BEFORE INSERT ON mobil
FOR EACH ROW
BEGIN
    IF ASCII(LEFT(NEW.platno, 1)) NOT BETWEEN 65 AND 90 OR ASCII(LEFT(NEW.platno, 2)) NOT BETWEEN 65 AND 90 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Karakter awal pada plat nomor harus huruf';
    END IF;
END //
DELIMITER ;
DROP TRIGGER check_platno_format;
-- Ini harus gagal karena karakter pertama pada plat nomor bukan huruf
INSERT INTO mobil (platno, merk, jenis, harga_sewa_perhari) VALUES ('1234XYZ', 'Test', 'Test', 100000);

-- Ini harus berhasil karena karakter pertama pada plat nomor adalah huruf
INSERT INTO mobil (platno, merk, jenis, harga_sewa_perhari) VALUES ('HZ14XYZ', 'HONDA', 'SUPRA', 500000);
